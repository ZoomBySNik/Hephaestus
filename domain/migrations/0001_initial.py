# Generated by Django 4.2.7 on 2024-03-18 16:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('patronymic', models.CharField(max_length=255, verbose_name='Отчество')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='RU', verbose_name='Номер телефона')),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='user_photos', verbose_name='Фото профиля')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locality', models.CharField(max_length=255, verbose_name='Населенный пункт')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Улица')),
                ('number_of_building', models.CharField(blank=True, max_length=31, null=True, verbose_name='Номер строения')),
                ('apartment_number', models.CharField(blank=True, max_length=31, null=True, verbose_name='Номер квартиры/офиса')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
                ('map_link', models.URLField(blank=True, max_length=2083, null=True, verbose_name='Ссылка на карты')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90, verbose_name='Наименование')),
                ('code', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Код уровня профессионального образования')),
            ],
            options={
                'verbose_name': 'Уровень образования',
                'verbose_name_plural': 'Уровни образования',
            },
        ),
        migrations.CreateModel(
            name='EmployeePosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
            },
        ),
        migrations.CreateModel(
            name='OrganizationalLegalForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90, verbose_name='Наименование')),
                ('short_name', models.CharField(max_length=10, verbose_name='Краткое наименование')),
            ],
            options={
                'verbose_name': 'Организационно-правовая форма',
                'verbose_name_plural': 'Организационно-правовые формы',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должность',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Навык',
                'verbose_name_plural': 'Навыки',
            },
        ),
        migrations.CreateModel(
            name='SoftwareAndHardwareTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Программно-техническое средство',
                'verbose_name_plural': 'Программно-технические средства',
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Специализация',
                'verbose_name_plural': 'Специализации',
            },
        ),
        migrations.CreateModel(
            name='WorkSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'График работы',
                'verbose_name_plural': 'Графики работы',
            },
        ),
        migrations.CreateModel(
            name='CustomInAdminUser',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('domain.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='JobSeeker',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('birthdate', models.DateField(verbose_name='Дата рождения')),
                ('about', models.TextField(blank=True, null=True, verbose_name='Описание профиля')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.address', verbose_name='Адрес')),
                ('skill', models.ManyToManyField(blank=True, to='domain.skill', verbose_name='Навыки')),
                ('specialization', models.ManyToManyField(blank=True, to='domain.specialization', verbose_name='Специализация')),
            ],
            options={
                'verbose_name': 'Соискатель',
                'verbose_name_plural': 'Соискатели',
            },
            bases=('domain.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('time_of_publication', models.DateTimeField(auto_now_add=True, verbose_name='Время публикации')),
                ('time_of_moderation', models.DateTimeField(blank=True, null=True, verbose_name='Время модерации')),
                ('time_of_edition', models.DateTimeField(blank=True, null=True, verbose_name='Время изменения')),
                ('software_and_hardware_tool', models.ManyToManyField(blank=True, to='domain.softwareandhardwaretool', verbose_name='Программно-техническое средство')),
                ('job_seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.jobseeker', verbose_name='Соискатель')),
            ],
            options={
                'verbose_name': 'Публикация',
                'verbose_name_plural': 'Публикации',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('payment_account', models.CharField(max_length=20, verbose_name='Расчетный счет')),
                ('okved_kode', models.CharField(blank=True, max_length=9, null=True, verbose_name='Код ОКВЭД')),
                ('inn', models.CharField(max_length=12, verbose_name='ИНН')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.address', verbose_name='Адрес')),
                ('organizational_legal_form', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.organizationallegalform', verbose_name='ОПФ')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
            },
        ),
        migrations.CreateModel(
            name='EducationalOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.address', verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Образовательное учреждение',
                'verbose_name_plural': 'Образовательные учреждения',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('code', models.CharField(blank=True, max_length=9, null=True, verbose_name='Код специальности')),
                ('education_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.educationlevel', verbose_name='Уровень образования')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.educationalorganization', verbose_name='Образовательное учреждение')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образования',
            },
        ),
        migrations.CreateModel(
            name='AttachmentToPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='attachment_to_publications', verbose_name='Приложение к публикации')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.publication')),
            ],
            options={
                'verbose_name': 'Приложение к публикации',
                'verbose_name_plural': 'Приложения к публикациям',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_application', models.DateTimeField(auto_now_add=True, verbose_name='Дата заявки')),
                ('desired_date', models.DateField(blank=True, null=True, verbose_name='Желательный срок')),
                ('final_date', models.DateField(blank=True, null=True, verbose_name='Крайний срок')),
                ('salary', models.CharField(max_length=255, verbose_name='Зарплата')),
                ('experience', models.IntegerField(default=0, verbose_name='Опыт (лет)')),
                ('date_of_completion', models.DateField(blank=True, null=True, verbose_name='Дата выполнения')),
                ('date_of_cancellation', models.DateField(blank=True, null=True, verbose_name='Дата отмены')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В обработке'), ('pending_approval', 'На согласовании'), ('completed', 'Завершена'), ('canceled', 'Отменена'), ('payment_received', 'Получена оплата')], default='new', max_length=20, verbose_name='Статус')),
                ('education_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='domain.educationlevel', verbose_name='Уровень образования')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.position', verbose_name='Должность')),
                ('skills', models.ManyToManyField(blank=True, to='domain.skill', verbose_name='Навыки')),
                ('software_and_hardware_tools', models.ManyToManyField(blank=True, to='domain.softwareandhardwaretool', verbose_name='Требуемые программно-технические средства')),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.specialization', verbose_name='Специализация')),
                ('work_schedule', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.workschedule', verbose_name='График работы')),
            ],
            options={
                'verbose_name': 'Заявка на подбор специалиста',
                'verbose_name_plural': 'Заявки на подбор специалистов',
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_employment', models.DateField(verbose_name='Дата приёма')),
                ('date_of_dismissal', models.DateField(blank=True, null=True, verbose_name='Дата увольнения')),
                ('organization', models.CharField(max_length=255, verbose_name='Организация')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.position', verbose_name='Должность')),
                ('job_seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.jobseeker', verbose_name='Соискатель')),
            ],
            options={
                'verbose_name': 'Опыт работы',
                'verbose_name_plural': 'Опыты работ',
            },
        ),
        migrations.CreateModel(
            name='SoftwareAndHardwareToolOfJobSeeker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_level', models.CharField(blank=True, max_length=20, null=True, verbose_name='Уровень владения')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('software_and_hardware_tool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.softwareandhardwaretool', verbose_name='Программно-техническое средство')),
                ('job_seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.jobseeker', verbose_name='Соискатель')),
            ],
            options={
                'verbose_name': 'Уровень владения программно-техническим средством',
                'verbose_name_plural': 'Уровни владения программно-техническими средствами',
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('position', models.CharField(blank=True, max_length=90, null=True, verbose_name='Должность')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='domain.organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Работодатель',
                'verbose_name_plural': 'Работодатели',
            },
            bases=('domain.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('date_of_employment', models.DateField(verbose_name='Дата приёма')),
                ('date_of_dismissal', models.DateField(blank=True, null=True, verbose_name='Дата увольнения')),
                ('employee_position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.employeeposition', verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Работник',
                'verbose_name_plural': 'Работники',
            },
            bases=('domain.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EducationOfJobSeeker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_received', models.IntegerField(choices=[(1980, '1980'), (1981, '1981'), (1982, '1982'), (1983, '1983'), (1984, '1984'), (1985, '1985'), (1986, '1986'), (1987, '1987'), (1988, '1988'), (1989, '1989'), (1990, '1990'), (1991, '1991'), (1992, '1992'), (1993, '1993'), (1994, '1994'), (1995, '1995'), (1996, '1996'), (1997, '1997'), (1998, '1998'), (1999, '1999'), (2000, '2000'), (2001, '2001'), (2002, '2002'), (2003, '2003'), (2004, '2004'), (2005, '2005'), (2006, '2006'), (2007, '2007'), (2008, '2008'), (2009, '2009'), (2010, '2010'), (2011, '2011'), (2012, '2012'), (2013, '2013'), (2014, '2014'), (2015, '2015'), (2016, '2016'), (2017, '2017'), (2018, '2018'), (2019, '2019'), (2020, '2020'), (2021, '2021'), (2022, '2022'), (2023, '2023'), (2024, '2024')], verbose_name='Год получения')),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.education', verbose_name='Образование')),
                ('job_seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.jobseeker', verbose_name='Соискатель')),
            ],
            options={
                'verbose_name': 'Образование соискателя',
                'verbose_name_plural': 'Образования соискателей',
            },
        ),
        migrations.CreateModel(
            name='ApplicationsResponses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_response', models.DateTimeField(auto_now_add=True, verbose_name='Дата отклика на заявку')),
                ('status', models.CharField(choices=[('pending', 'В ожидании'), ('under_review', 'Рассмотрение'), ('accepted', 'Принят'), ('rejected', 'Отклонен'), ('withdrawn', 'Отозван')], default='pending', max_length=20, verbose_name='Статус')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('evaluation', models.FloatField(verbose_name='Предварительная оценка соответствия соискателя')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.application', verbose_name='Заявка на подбор')),
                ('job_seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.jobseeker', verbose_name='Соискатель')),
            ],
            options={
                'verbose_name': 'Отклик на заявку',
                'verbose_name_plural': 'Отклики на заявки',
            },
        ),
        migrations.AddField(
            model_name='application',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.employee', verbose_name='Работник'),
        ),
        migrations.AddField(
            model_name='application',
            name='employer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.employer', verbose_name='Работодатель'),
        ),
    ]
